name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install Backend Dependencies
        run: |
          cd backend
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
      - name: Build Backend Executable
        run: |
          cd backend
          source venv/bin/activate
          python build_executable.py
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install
      - name: Build Frontend
        run: |
          cd frontend
          npm run build
      - name: Build Electron Linux
        run: |
          cd frontend
          npm run build-electron
      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: frontend/dist-electron/*.AppImage

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install Backend Dependencies
        run: |
          cd backend
          python -m venv venv
          venv\Scripts\activate
          pip install -r requirements.txt
      - name: Build Backend Executable
        run: |
          cd backend
          venv\Scripts\activate
          python build_executable.py
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install
      - name: Build Frontend
        run: |
          cd frontend
          npm run build
      - name: Build Electron Windows
        run: |
          cd frontend
          npm run build-electron
      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: frontend/dist-electron/*.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install Backend Dependencies
        run: |
          cd backend
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
      - name: Build Backend Executable
        run: |
          cd backend
          source venv/bin/activate
          python build_executable.py
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install
      - name: Build Frontend
        run: |
          cd frontend
          npm run build
      - name: Build Electron macOS
        run: |
          cd frontend
          npm run build-electron
      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: frontend/dist-electron/*.dmg

  create-release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Authron ${{ github.ref_name }}
          body: |
            # 🎉 Authron ${{ github.ref_name }}
            ## ✨ Features
            - 🔐 Secure password storage with AES-256 encryption
            - 🔧 Customizable password generator
            - 🗂️ Categories and favorites for better organization
            - 📊 Password strength analysis with visual feedback
            - 🛠️ Admin panel for user management
            - 🔒 Two-factor authentication (2FA/TOTP)
            - 🌐 Multi-language support (English/German)
            - 💡 Modern, responsive UI
            - ⏱️ Auto logout after inactivity
            - 🧩 TOTP generator for external services
            - 📥 Import/export of passwords
            - 🤝 Password sharing with trusted contacts
            - 🖥️ Desktop app with Electron
            ## 📦 Downloads
            - **Windows:** `.exe` (Desktop app)
            - **macOS:** `.dmg` (Desktop app)
            - **Linux:** `.AppImage` (Desktop app)
            ## 🔐 Default Admin Account
            - Email: `admin@example.com`
            - Password: `Admin@1234`
            ## 🚀 Installation
            ### Linux
            ```bash
            # Download
            wget https://github.com/niklastech/authron/releases/latest/download/Authron.AppImage
            # Make executable (REQUIRED)
            chmod +x Authron.AppImage
            # Run
            ./Authron.AppImage
            ```
            ### Windows
            Download and run the `.exe` installer
            ### macOS
            Download the `.dmg` file and drag to Applications
          files: |
            artifacts/*.exe
            artifacts/*.dmg
            artifacts/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
